"""Add tasks_users table

Revision ID: 3c486b0af1fa
Revises: 111d91bda36e
Create Date: 2024-07-09 13:05:28.205686

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3c486b0af1fa"
down_revision: Union[str, None] = "111d91bda36e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tasks_users",
        sa.Column("user", sa.UUID(), nullable=False),
        sa.Column("task", sa.UUID(), nullable=False),
        sa.Column("role", sa.Enum("OBSERVER", "PERFORMER", name="role"), nullable=False),
        sa.ForeignKeyConstraint(["task"], ["task.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user", "task", "role"),
    )
    op.drop_table("observer")
    op.drop_table("performer")
    op.add_column("struct_adm", sa.Column("company_id", sa.UUID(), nullable=False))
    op.create_foreign_key(None, "struct_adm", "company", ["company_id"], ["id"], ondelete="CASCADE")
    op.add_column("task", sa.Column("company_id", sa.UUID(), nullable=False))
    op.create_foreign_key(None, "task", "company", ["company_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_column("task", "company_id")
    op.drop_constraint(None, "struct_adm", type_="foreignkey")
    op.drop_column("struct_adm", "company_id")
    op.create_table(
        "performer",
        sa.Column("user", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("task", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["task"], ["task.id"], name="performer_task_fkey", ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user"], ["user.id"], name="performer_user_fkey", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user", "task", name="performer_pkey"),
    )
    op.create_table(
        "observer",
        sa.Column("user", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("task", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["task"], ["task.id"], name="observer_task_fkey", ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user"], ["user.id"], name="observer_user_fkey", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user", "task", name="observer_pkey"),
    )
    op.drop_table("tasks_users")
    # ### end Alembic commands ###
